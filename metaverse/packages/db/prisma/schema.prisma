// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String      @id @unique @default(cuid())
  username   String      @unique
  password   String
  avatarId   String?
  role       Role
  createdSpaces Space[]
  avatar     Avatar?     @relation(fields: [avatarId], references: [id])
  userSpaces UserSpace[]
}

model UserSpace {
  id      String @id @unique @default(cuid())
  userId  String
  spaceId String
  user    User   @relation(fields: [userId], references: [id])
  space   Space  @relation(fields: [spaceId], references: [id])
  @@unique([userId, spaceId])
}

model Space {
  id        String        @id @unique @default(cuid())
  name      String
  width     Int
  height    Int
  thumbnail String?
  creatorId String
  creator   User          @relation(fields: [creatorId], references: [id])
  elements  SpaceElement[]
  users     UserSpace[]
}

model SpaceElement {
  id        String  @id @unique @default(cuid())
  elementId String
  spaceId   String
  x         Int
  y         Int
  space     Space   @relation(fields: [spaceId], references: [id])
  element   Element @relation(fields: [elementId], references: [id])
}

model Element {
  id          String         @id @unique @default(cuid())
  width       Int
  height      Int
  static      Boolean
  imageUrl    String
  spaceElements SpaceElement[]
  mapElements MapElement[]
}

model Map {
  id          String       @id @unique @default(cuid())
  width       Int
  height      Int
  name        String
  thumbnail   String
  mapElements MapElement[]
}

model MapElement {
  id        String  @id @unique @default(cuid())
  mapId     String
  elementId String
  x         Int?
  y         Int?
  map       Map     @relation(fields: [mapId], references: [id])
  element   Element @relation(fields: [elementId], references: [id])
}

model Avatar {
  id       String  @id @unique @default(cuid())
  imageUrl String?
  name     String?
  users    User[]
}

enum Role {
  Admin
  User
}